version: '3.4'
networks:
   frontend:
   backend:

services:
   catalog:
     image: jewels/catalogapi
     build:
       context: .\ProductCatalogApi
       dockerfile: Dockerfile
     environment:
       DataBaseServer: mssqlserver
       DataBaseName: CatalogDatabase
       DataBaseUser: sa
       DataBasePassword: ProductApi(!)
       ExternalBaseUrl: http://localhost:6800
     ports:
       - "6800:80"
       
     container_name: jewelscatalogapi
     networks:
       - backend
       - frontend
        
     depends_on:
       - mssqlserver
   cart:
     build:
       context: .\CartApi
       dockerfile: Dockerfile
     image: jewels/cartapi
     logging:
       driver: "json-file"
       options:
         max-size: "200k"
         max-file: "10"
     environment:
       ASPNETCORE_ENVIRONMENT: Development
       IdentityUrl: http://10.0.0.11:6700
       ConnectionString: basket.data
     ports:
       - "6801:80"
     container_name: cartapi
     networks:
       - backend
       - frontend
     depends_on:
      - basket.data
      - tokenserver

    
   mssqlserver:
     image: "microsoft/mssql-server-linux:latest"
     environment:
       ACCEPT_EULA: Y
       SA_PASSWORD: ProductApi(!)
     ports:
       - "1448:1433"
     container_name: jewelssqlserver
     networks:
       - backend
   tokenserver:
     build:
       context: .\TokenServiceApi
       dockerfile: Dockerfile
     image: jewels/tokenapi
     logging:
       driver: "json-file"
       options:
         max-size: "200k"
         max-file: "10"
     environment:
       ASPNETCORE_ENVIRONMENT: Development
       MvcClient: http://localhost:5210
     ports:
       - "6700:80"
     container_name: tokenserviceapi
     networks:
       - backend
       - frontend
     depends_on:
       - mssqlserver
  


   webmvc: 
     build:
       context: .\webmvc
       dockerfile: Dockerfile
     image: jewels/webmvc
     container_name: webshop
     environment:
       CatalogUrl: http://catalog
       IdentityUrl: http://10.0.0.11:6700
       CallBackUrl: http://localhost:5210
       CartUrl: http://cart
     ports:
       - "5210:80"
     networks:
       - frontend
     depends_on:
       - catalog
       - cart
       - tokenserver
      

      
   basket.data:
     image: redis
     container_name: basketdata
     ports:
       - "6080:6379"
     networks:
       - backend
       